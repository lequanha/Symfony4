<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'test.private_services_locator' shared service.

return $this->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array('App\\Form\\CategoryType' => function () {
    return ($this->privates['App\Form\CategoryType'] ?? $this->privates['App\Form\CategoryType'] = new \App\Form\CategoryType());
}, 'App\\Form\\ProductType' => function () {
    return ($this->privates['App\Form\ProductType'] ?? $this->privates['App\Form\ProductType'] = new \App\Form\ProductType());
}, 'App\\Repository\\CategoryRepository' => function () {
    return ($this->privates['App\Repository\CategoryRepository'] ?? $this->load('getCategoryRepositoryService.php'));
}, 'App\\Repository\\ProductRepository' => function () {
    return ($this->privates['App\Repository\ProductRepository'] ?? $this->load('getProductRepositoryService.php'));
}, 'App\\Repository\\UserRepository' => function () {
    return ($this->privates['App\Repository\UserRepository'] ?? $this->load('getUserRepositoryService.php'));
}, 'controller_name_converter' => function () {
    return ($this->privates['controller_name_converter'] ?? $this->privates['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser(($this->services['kernel'] ?? $this->get('kernel', 1))));
}, 'controller_resolver' => function () {
    return ($this->privates['controller_resolver'] ?? $this->getControllerResolverService());
}, 'argument_metadata_factory' => function () {
    return ($this->privates['argument_metadata_factory'] ?? $this->privates['argument_metadata_factory'] = new \Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory());
}, 'argument_resolver' => function () {
    return ($this->privates['argument_resolver'] ?? $this->getArgumentResolverService());
}, 'argument_resolver.request_attribute' => function () {
    return ($this->privates['argument_resolver.request_attribute'] ?? $this->privates['argument_resolver.request_attribute'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver());
}, 'argument_resolver.request' => function () {
    return ($this->privates['argument_resolver.request'] ?? $this->privates['argument_resolver.request'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver());
}, 'argument_resolver.session' => function () {
    return ($this->privates['argument_resolver.session'] ?? $this->privates['argument_resolver.session'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver());
}, 'argument_resolver.service' => function () {
    return ($this->privates['argument_resolver.service'] ?? $this->load('getArgumentResolver_ServiceService.php'));
}, 'argument_resolver.default' => function () {
    return ($this->privates['argument_resolver.default'] ?? $this->privates['argument_resolver.default'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver());
}, 'argument_resolver.variadic' => function () {
    return ($this->privates['argument_resolver.variadic'] ?? $this->privates['argument_resolver.variadic'] = new \Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver());
}, 'response_listener' => function () {
    return ($this->privates['response_listener'] ?? $this->privates['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8'));
}, 'streamed_response_listener' => function () {
    return ($this->privates['streamed_response_listener'] ?? $this->privates['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener());
}, 'locale_listener' => function () {
    return ($this->privates['locale_listener'] ?? $this->getLocaleListenerService());
}, 'validate_request_listener' => function () {
    return ($this->privates['validate_request_listener'] ?? $this->privates['validate_request_listener'] = new \Symfony\Component\HttpKernel\EventListener\ValidateRequestListener());
}, 'resolve_controller_name_subscriber' => function () {
    return ($this->privates['resolve_controller_name_subscriber'] ?? $this->getResolveControllerNameSubscriberService());
}, 'parameter_bag' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'file_locator' => function () {
    return ($this->privates['file_locator'] ?? $this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->targetDirs[3].'/src/Resources'), array(0 => ($this->targetDirs[3].'/src'))));
}, 'config_cache_factory' => function () {
    return ($this->privates['config_cache_factory'] ?? $this->privates['config_cache_factory'] = new \Symfony\Component\Config\ResourceCheckerConfigCacheFactory());
}, 'fragment.handler' => function () {
    return ($this->privates['fragment.handler'] ?? $this->load('getFragment_HandlerService.php'));
}, 'fragment.renderer.inline' => function () {
    return ($this->privates['fragment.renderer.inline'] ?? $this->load('getFragment_Renderer_InlineService.php'));
}, 'console.error_listener' => function () {
    return ($this->privates['console.error_listener'] ?? $this->load('getConsole_ErrorListenerService.php'));
}, 'console.command.about' => function () {
    return ($this->privates['console.command.about'] ?? $this->load('getConsole_Command_AboutService.php'));
}, 'console.command.assets_install' => function () {
    return ($this->privates['console.command.assets_install'] ?? $this->load('getConsole_Command_AssetsInstallService.php'));
}, 'console.command.cache_clear' => function () {
    return ($this->privates['console.command.cache_clear'] ?? $this->load('getConsole_Command_CacheClearService.php'));
}, 'console.command.cache_pool_clear' => function () {
    return ($this->privates['console.command.cache_pool_clear'] ?? $this->load('getConsole_Command_CachePoolClearService.php'));
}, 'console.command.cache_pool_prune' => function () {
    return ($this->privates['console.command.cache_pool_prune'] ?? $this->load('getConsole_Command_CachePoolPruneService.php'));
}, 'console.command.cache_pool_delete' => function () {
    return ($this->privates['console.command.cache_pool_delete'] ?? $this->load('getConsole_Command_CachePoolDeleteService.php'));
}, 'console.command.cache_warmup' => function () {
    return ($this->privates['console.command.cache_warmup'] ?? $this->load('getConsole_Command_CacheWarmupService.php'));
}, 'console.command.config_debug' => function () {
    return ($this->privates['console.command.config_debug'] ?? $this->load('getConsole_Command_ConfigDebugService.php'));
}, 'console.command.config_dump_reference' => function () {
    return ($this->privates['console.command.config_dump_reference'] ?? $this->load('getConsole_Command_ConfigDumpReferenceService.php'));
}, 'console.command.container_debug' => function () {
    return ($this->privates['console.command.container_debug'] ?? $this->load('getConsole_Command_ContainerDebugService.php'));
}, 'console.command.debug_autowiring' => function () {
    return ($this->privates['console.command.debug_autowiring'] ?? $this->load('getConsole_Command_DebugAutowiringService.php'));
}, 'console.command.event_dispatcher_debug' => function () {
    return ($this->privates['console.command.event_dispatcher_debug'] ?? $this->load('getConsole_Command_EventDispatcherDebugService.php'));
}, 'console.command.router_debug' => function () {
    return ($this->privates['console.command.router_debug'] ?? $this->load('getConsole_Command_RouterDebugService.php'));
}, 'console.command.router_match' => function () {
    return ($this->privates['console.command.router_match'] ?? $this->load('getConsole_Command_RouterMatchService.php'));
}, 'console.command.translation_debug' => function () {
    return ($this->privates['console.command.translation_debug'] ?? $this->load('getConsole_Command_TranslationDebugService.php'));
}, 'console.command.translation_update' => function () {
    return ($this->privates['console.command.translation_update'] ?? $this->load('getConsole_Command_TranslationUpdateService.php'));
}, 'console.command.xliff_lint' => function () {
    return ($this->privates['console.command.xliff_lint'] ?? $this->load('getConsole_Command_XliffLintService.php'));
}, 'console.command.yaml_lint' => function () {
    return ($this->privates['console.command.yaml_lint'] ?? $this->load('getConsole_Command_YamlLintService.php'));
}, 'console.command.form_debug' => function () {
    return ($this->privates['console.command.form_debug'] ?? $this->load('getConsole_Command_FormDebugService.php'));
}, 'cache.validator' => function () {
    return ($this->privates['cache.validator'] ?? $this->getCache_ValidatorService());
}, 'cache.serializer' => function () {
    return ($this->privates['cache.serializer'] ?? $this->getCache_SerializerService());
}, 'cache.annotations' => function () {
    return ($this->privates['cache.annotations'] ?? $this->load('getCache_AnnotationsService.php'));
}, 'cache.default_clearer' => function () {
    return ($this->services['cache.app_clearer'] ?? $this->load('getCache_AppClearerService.php'));
}, 'translator.selector' => function () {
    return ($this->privates['translator.selector'] ?? $this->privates['translator.selector'] = new \Symfony\Component\Translation\MessageSelector());
}, 'test.client.history' => function () {
    return new \Symfony\Component\BrowserKit\History();
}, 'test.client.cookiejar' => function () {
    return new \Symfony\Component\BrowserKit\CookieJar();
}, 'test.session.listener' => function () {
    return ($this->privates['test.session.listener'] ?? $this->getTest_Session_ListenerService());
}, 'session.storage.metadata_bag' => function () {
    return ($this->privates['session.storage.metadata_bag'] ?? $this->privates['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0'));
}, 'session.flash_bag' => function () {
    return ($this->privates['session.flash_bag'] ?? $this->privates['session.flash_bag'] = new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
}, 'session.attribute_bag' => function () {
    return ($this->privates['session.attribute_bag'] ?? $this->privates['session.attribute_bag'] = new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag());
}, 'session.storage.mock_file' => function () {
    return ($this->privates['session.storage.mock_file'] ?? $this->load('getSession_Storage_MockFileService.php'));
}, 'session_listener' => function () {
    return ($this->privates['session_listener'] ?? $this->getSessionListenerService());
}, 'security.csrf.token_generator' => function () {
    return ($this->privates['security.csrf.token_generator'] ?? $this->privates['security.csrf.token_generator'] = new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator());
}, 'security.csrf.token_storage' => function () {
    return ($this->privates['security.csrf.token_storage'] ?? $this->load('getSecurity_Csrf_TokenStorageService.php'));
}, 'twig.runtime.security_csrf' => function () {
    return ($this->privates['twig.runtime.security_csrf'] ?? $this->load('getTwig_Runtime_SecurityCsrfService.php'));
}, 'twig.extension.security_csrf' => function () {
    return ($this->privates['twig.extension.security_csrf'] ?? $this->privates['twig.extension.security_csrf'] = new \Symfony\Bridge\Twig\Extension\CsrfExtension());
}, 'form.resolved_type_factory' => function () {
    return ($this->privates['form.resolved_type_factory'] ?? $this->privates['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory());
}, 'form.registry' => function () {
    return ($this->privates['form.registry'] ?? $this->load('getForm_RegistryService.php'));
}, 'form.extension' => function () {
    return ($this->privates['form.extension'] ?? $this->load('getForm_ExtensionService.php'));
}, 'form.type_guesser.validator' => function () {
    return ($this->privates['form.type_guesser.validator'] ?? $this->load('getForm_TypeGuesser_ValidatorService.php'));
}, 'form.choice_list_factory.default' => function () {
    return ($this->privates['form.choice_list_factory.default'] ?? $this->privates['form.choice_list_factory.default'] = new \Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory());
}, 'form.choice_list_factory.property_access' => function () {
    return ($this->privates['form.choice_list_factory.property_access'] ?? $this->load('getForm_ChoiceListFactory_PropertyAccessService.php'));
}, 'form.choice_list_factory.cached' => function () {
    return ($this->privates['form.choice_list_factory.cached'] ?? $this->load('getForm_ChoiceListFactory_CachedService.php'));
}, 'form.type.form' => function () {
    return ($this->privates['form.type.form'] ?? $this->load('getForm_Type_FormService.php'));
}, 'form.type.choice' => function () {
    return ($this->privates['form.type.choice'] ?? $this->load('getForm_Type_ChoiceService.php'));
}, 'form.type_extension.form.http_foundation' => function () {
    return ($this->privates['form.type_extension.form.http_foundation'] ?? $this->load('getForm_TypeExtension_Form_HttpFoundationService.php'));
}, 'form.type_extension.form.request_handler' => function () {
    return ($this->privates['form.type_extension.form.request_handler'] ?? $this->load('getForm_TypeExtension_Form_RequestHandlerService.php'));
}, 'form.server_params' => function () {
    return ($this->privates['form.server_params'] ?? $this->load('getForm_ServerParamsService.php'));
}, 'form.type_extension.form.validator' => function () {
    return ($this->privates['form.type_extension.form.validator'] ?? $this->load('getForm_TypeExtension_Form_ValidatorService.php'));
}, 'form.type_extension.repeated.validator' => function () {
    return ($this->privates['form.type_extension.repeated.validator'] ?? $this->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension());
}, 'form.type_extension.submit.validator' => function () {
    return ($this->privates['form.type_extension.submit.validator'] ?? $this->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension());
}, 'form.type_extension.upload.validator' => function () {
    return ($this->privates['form.type_extension.upload.validator'] ?? $this->load('getForm_TypeExtension_Upload_ValidatorService.php'));
}, 'form.type_extension.csrf' => function () {
    return ($this->privates['form.type_extension.csrf'] ?? $this->load('getForm_TypeExtension_CsrfService.php'));
}, 'assets.packages' => function () {
    return ($this->privates['assets.packages'] ?? $this->getAssets_PackagesService());
}, 'assets.context' => function () {
    return ($this->privates['assets.context'] ?? $this->getAssets_ContextService());
}, 'assets.empty_version_strategy' => function () {
    return ($this->privates['assets.empty_version_strategy'] ?? $this->privates['assets.empty_version_strategy'] = new \Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy());
}, 'assets._default_package' => function () {
    return ($this->privates['assets._default_package'] ?? $this->getAssets_DefaultPackageService());
}, 'validator.builder' => function () {
    return ($this->privates['validator.builder'] ?? $this->getValidator_BuilderService());
}, 'validator.mapping.cache_warmer' => function () {
    return ($this->privates['validator.mapping.cache_warmer'] ?? $this->load('getValidator_Mapping_CacheWarmerService.php'));
}, 'validator.mapping.cache.symfony' => function () {
    return ($this->privates['validator.mapping.cache.symfony'] ?? $this->getValidator_Mapping_Cache_SymfonyService());
}, 'validator.validator_factory' => function () {
    return ($this->privates['validator.validator_factory'] ?? $this->getValidator_ValidatorFactoryService());
}, 'validator.expression' => function () {
    return ($this->privates['validator.expression'] ?? $this->privates['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator());
}, 'validator.email' => function () {
    return ($this->privates['validator.email'] ?? $this->privates['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator('html5'));
}, 'translator.default' => function () {
    return ($this->services['translator'] ?? $this->getTranslatorService());
}, 'translator.formatter.default' => function () {
    return ($this->privates['translator.formatter.default'] ?? $this->getTranslator_Formatter_DefaultService());
}, 'translation.loader.php' => function () {
    return ($this->privates['translation.loader.php'] ?? $this->privates['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader());
}, 'translation.loader.yml' => function () {
    return ($this->privates['translation.loader.yml'] ?? $this->privates['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader());
}, 'translation.loader.xliff' => function () {
    return ($this->privates['translation.loader.xliff'] ?? $this->privates['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader());
}, 'translation.loader.po' => function () {
    return ($this->privates['translation.loader.po'] ?? $this->privates['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader());
}, 'translation.loader.mo' => function () {
    return ($this->privates['translation.loader.mo'] ?? $this->privates['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader());
}, 'translation.loader.qt' => function () {
    return ($this->privates['translation.loader.qt'] ?? $this->privates['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader());
}, 'translation.loader.csv' => function () {
    return ($this->privates['translation.loader.csv'] ?? $this->privates['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader());
}, 'translation.loader.res' => function () {
    return ($this->privates['translation.loader.res'] ?? $this->privates['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader());
}, 'translation.loader.dat' => function () {
    return ($this->privates['translation.loader.dat'] ?? $this->privates['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader());
}, 'translation.loader.ini' => function () {
    return ($this->privates['translation.loader.ini'] ?? $this->privates['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader());
}, 'translation.loader.json' => function () {
    return ($this->privates['translation.loader.json'] ?? $this->privates['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader());
}, 'translation.dumper.php' => function () {
    return ($this->privates['translation.dumper.php'] ?? $this->privates['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper());
}, 'translation.dumper.xliff' => function () {
    return ($this->privates['translation.dumper.xliff'] ?? $this->privates['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper());
}, 'translation.dumper.po' => function () {
    return ($this->privates['translation.dumper.po'] ?? $this->privates['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper());
}, 'translation.dumper.mo' => function () {
    return ($this->privates['translation.dumper.mo'] ?? $this->privates['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper());
}, 'translation.dumper.yml' => function () {
    return ($this->privates['translation.dumper.yml'] ?? $this->privates['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper());
}, 'translation.dumper.yaml' => function () {
    return ($this->privates['translation.dumper.yaml'] ?? $this->privates['translation.dumper.yaml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper('yaml'));
}, 'translation.dumper.qt' => function () {
    return ($this->privates['translation.dumper.qt'] ?? $this->privates['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper());
}, 'translation.dumper.csv' => function () {
    return ($this->privates['translation.dumper.csv'] ?? $this->privates['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper());
}, 'translation.dumper.ini' => function () {
    return ($this->privates['translation.dumper.ini'] ?? $this->privates['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper());
}, 'translation.dumper.json' => function () {
    return ($this->privates['translation.dumper.json'] ?? $this->privates['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper());
}, 'translation.dumper.res' => function () {
    return ($this->privates['translation.dumper.res'] ?? $this->privates['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper());
}, 'translation.extractor.php' => function () {
    return ($this->privates['translation.extractor.php'] ?? $this->privates['translation.extractor.php'] = new \Symfony\Component\Translation\Extractor\PhpExtractor());
}, 'translation.reader' => function () {
    return ($this->privates['translation.reader'] ?? $this->load('getTranslation_ReaderService.php'));
}, 'translation.extractor' => function () {
    return ($this->privates['translation.extractor'] ?? $this->load('getTranslation_ExtractorService.php'));
}, 'translation.writer' => function () {
    return ($this->privates['translation.writer'] ?? $this->load('getTranslation_WriterService.php'));
}, 'translation.warmer' => function () {
    return ($this->privates['translation.warmer'] ?? $this->load('getTranslation_WarmerService.php'));
}, 'translator_listener' => function () {
    return ($this->privates['translator_listener'] ?? $this->getTranslatorListenerService());
}, 'cache.property_access' => function () {
    return ($this->privates['cache.property_access'] ?? $this->getCache_PropertyAccessService());
}, 'debug.debug_handlers_listener' => function () {
    return ($this->privates['debug.debug_handlers_listener'] ?? $this->getDebug_DebugHandlersListenerService());
}, 'debug.file_link_formatter' => function () {
    return ($this->privates['debug.file_link_formatter'] ?? $this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL));
}, 'routing.resolver' => function () {
    return ($this->privates['routing.resolver'] ?? $this->load('getRouting_ResolverService.php'));
}, 'routing.loader.xml' => function () {
    return ($this->privates['routing.loader.xml'] ?? $this->load('getRouting_Loader_XmlService.php'));
}, 'routing.loader.yml' => function () {
    return ($this->privates['routing.loader.yml'] ?? $this->load('getRouting_Loader_YmlService.php'));
}, 'routing.loader.php' => function () {
    return ($this->privates['routing.loader.php'] ?? $this->load('getRouting_Loader_PhpService.php'));
}, 'routing.loader.glob' => function () {
    return ($this->privates['routing.loader.glob'] ?? $this->load('getRouting_Loader_GlobService.php'));
}, 'routing.loader.directory' => function () {
    return ($this->privates['routing.loader.directory'] ?? $this->load('getRouting_Loader_DirectoryService.php'));
}, 'routing.loader.service' => function () {
    return ($this->privates['routing.loader.service'] ?? $this->privates['routing.loader.service'] = new \Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader($this));
}, 'router.default' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'router.request_context' => function () {
    return ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService());
}, 'router.cache_warmer' => function () {
    return ($this->privates['router.cache_warmer'] ?? $this->load('getRouter_CacheWarmerService.php'));
}, 'router_listener' => function () {
    return ($this->privates['router_listener'] ?? $this->getRouterListenerService());
}, 'routing.loader.annotation' => function () {
    return ($this->privates['routing.loader.annotation'] ?? $this->load('getRouting_Loader_AnnotationService.php'));
}, 'routing.loader.annotation.directory' => function () {
    return ($this->privates['routing.loader.annotation.directory'] ?? $this->load('getRouting_Loader_Annotation_DirectoryService.php'));
}, 'routing.loader.annotation.file' => function () {
    return ($this->privates['routing.loader.annotation.file'] ?? $this->load('getRouting_Loader_Annotation_FileService.php'));
}, 'annotations.reader' => function () {
    return ($this->privates['annotations.reader'] ?? $this->getAnnotations_ReaderService());
}, 'annotations.dummy_registry' => function () {
    return ($this->privates['annotations.dummy_registry'] ?? $this->getAnnotations_DummyRegistryService());
}, 'annotations.cached_reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());
}, 'annotations.cache_warmer' => function () {
    return ($this->privates['annotations.cache_warmer'] ?? $this->load('getAnnotations_CacheWarmerService.php'));
}, 'annotations.cache' => function () {
    return ($this->privates['annotations.cache'] ?? $this->load('getAnnotations_CacheService.php'));
}, 'property_accessor' => function () {
    return ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService());
}, 'serializer.mapping.class_discriminator_resolver' => function () {
    return ($this->privates['serializer.mapping.class_discriminator_resolver'] ?? $this->getSerializer_Mapping_ClassDiscriminatorResolverService());
}, 'serializer.normalizer.constraint_violation_list' => function () {
    return ($this->privates['serializer.normalizer.constraint_violation_list'] ?? $this->privates['serializer.normalizer.constraint_violation_list'] = new \Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer());
}, 'serializer.normalizer.dateinterval' => function () {
    return ($this->privates['serializer.normalizer.dateinterval'] ?? $this->privates['serializer.normalizer.dateinterval'] = new \Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer());
}, 'serializer.normalizer.data_uri' => function () {
    return ($this->privates['serializer.normalizer.data_uri'] ?? $this->privates['serializer.normalizer.data_uri'] = new \Symfony\Component\Serializer\Normalizer\DataUriNormalizer());
}, 'serializer.normalizer.datetime' => function () {
    return ($this->privates['serializer.normalizer.datetime'] ?? $this->privates['serializer.normalizer.datetime'] = new \Symfony\Component\Serializer\Normalizer\DateTimeNormalizer());
}, 'serializer.normalizer.json_serializable' => function () {
    return ($this->privates['serializer.normalizer.json_serializable'] ?? $this->privates['serializer.normalizer.json_serializable'] = new \Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer());
}, 'serializer.normalizer.object' => function () {
    return ($this->privates['serializer.normalizer.object'] ?? $this->getSerializer_Normalizer_ObjectService());
}, 'serializer.denormalizer.array' => function () {
    return ($this->privates['serializer.denormalizer.array'] ?? $this->privates['serializer.denormalizer.array'] = new \Symfony\Component\Serializer\Normalizer\ArrayDenormalizer());
}, 'serializer.mapping.chain_loader' => function () {
    return ($this->privates['serializer.mapping.chain_loader'] ?? $this->getSerializer_Mapping_ChainLoaderService());
}, 'serializer.mapping.cache_warmer' => function () {
    return ($this->privates['serializer.mapping.cache_warmer'] ?? $this->load('getSerializer_Mapping_CacheWarmerService.php'));
}, 'serializer.mapping.cache.symfony' => function () {
    return ($this->privates['serializer.mapping.cache.symfony'] ?? $this->getSerializer_Mapping_Cache_SymfonyService());
}, 'serializer.encoder.xml' => function () {
    return ($this->privates['serializer.encoder.xml'] ?? $this->privates['serializer.encoder.xml'] = new \Symfony\Component\Serializer\Encoder\XmlEncoder());
}, 'serializer.encoder.json' => function () {
    return ($this->privates['serializer.encoder.json'] ?? $this->privates['serializer.encoder.json'] = new \Symfony\Component\Serializer\Encoder\JsonEncoder());
}, 'serializer.encoder.yaml' => function () {
    return ($this->privates['serializer.encoder.yaml'] ?? $this->privates['serializer.encoder.yaml'] = new \Symfony\Component\Serializer\Encoder\YamlEncoder());
}, 'serializer.encoder.csv' => function () {
    return ($this->privates['serializer.encoder.csv'] ?? $this->privates['serializer.encoder.csv'] = new \Symfony\Component\Serializer\Encoder\CsvEncoder());
}, 'property_info.serializer_extractor' => function () {
    return ($this->privates['property_info.serializer_extractor'] ?? $this->load('getPropertyInfo_SerializerExtractorService.php'));
}, 'serializer.mapping.cache_class_metadata_factory' => function () {
    return ($this->privates['serializer.mapping.cache_class_metadata_factory'] ?? $this->getSerializer_Mapping_CacheClassMetadataFactoryService());
}, 'property_info' => function () {
    return ($this->privates['property_info'] ?? $this->getPropertyInfoService());
}, 'property_info.reflection_extractor' => function () {
    return ($this->privates['property_info.reflection_extractor'] ?? $this->privates['property_info.reflection_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor());
}, 'property_info.php_doc_extractor' => function () {
    return ($this->privates['property_info.php_doc_extractor'] ?? $this->privates['property_info.php_doc_extractor'] = new \Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor());
}, 'twig.app_variable' => function () {
    return ($this->privates['twig.app_variable'] ?? $this->getTwig_AppVariableService());
}, 'twig.cache_warmer' => function () {
    return ($this->privates['twig.cache_warmer'] ?? $this->load('getTwig_CacheWarmerService.php'));
}, 'twig.template_iterator' => function () {
    return ($this->privates['twig.template_iterator'] ?? $this->load('getTwig_TemplateIteratorService.php'));
}, 'twig.template_cache_warmer' => function () {
    return ($this->privates['twig.template_cache_warmer'] ?? $this->load('getTwig_TemplateCacheWarmerService.php'));
}, 'twig.loader.native_filesystem' => function () {
    return ($this->privates['twig.loader.native_filesystem'] ?? $this->getTwig_Loader_NativeFilesystemService());
}, 'twig.extension.trans' => function () {
    return ($this->privates['twig.extension.trans'] ?? $this->getTwig_Extension_TransService());
}, 'twig.extension.assets' => function () {
    return ($this->privates['twig.extension.assets'] ?? $this->getTwig_Extension_AssetsService());
}, 'twig.extension.code' => function () {
    return ($this->privates['twig.extension.code'] ?? $this->getTwig_Extension_CodeService());
}, 'twig.extension.routing' => function () {
    return ($this->privates['twig.extension.routing'] ?? $this->getTwig_Extension_RoutingService());
}, 'twig.extension.yaml' => function () {
    return ($this->privates['twig.extension.yaml'] ?? $this->privates['twig.extension.yaml'] = new \Symfony\Bridge\Twig\Extension\YamlExtension());
}, 'twig.extension.expression' => function () {
    return ($this->privates['twig.extension.expression'] ?? $this->privates['twig.extension.expression'] = new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
}, 'twig.extension.httpkernel' => function () {
    return ($this->privates['twig.extension.httpkernel'] ?? $this->privates['twig.extension.httpkernel'] = new \Symfony\Bridge\Twig\Extension\HttpKernelExtension());
}, 'twig.runtime.httpkernel' => function () {
    return ($this->privates['twig.runtime.httpkernel'] ?? $this->load('getTwig_Runtime_HttpkernelService.php'));
}, 'twig.extension.httpfoundation' => function () {
    return ($this->privates['twig.extension.httpfoundation'] ?? $this->getTwig_Extension_HttpfoundationService());
}, 'twig.translation.extractor' => function () {
    return ($this->privates['twig.translation.extractor'] ?? $this->load('getTwig_Translation_ExtractorService.php'));
}, 'twig.exception_listener' => function () {
    return ($this->privates['twig.exception_listener'] ?? $this->load('getTwig_ExceptionListenerService.php'));
}, 'twig.configurator.environment' => function () {
    return ($this->privates['twig.configurator.environment'] ?? $this->getTwig_Configurator_EnvironmentService());
}, 'twig.runtime_loader' => function () {
    return ($this->privates['twig.runtime_loader'] ?? $this->getTwig_RuntimeLoaderService());
}, 'twig.extension.form' => function () {
    return ($this->privates['twig.extension.form'] ?? $this->privates['twig.extension.form'] = new \Symfony\Bridge\Twig\Extension\FormExtension(array(0 => $this, 1 => 'twig.form.renderer')));
}, 'twig.form.engine' => function () {
    return ($this->privates['twig.form.engine'] ?? $this->load('getTwig_Form_EngineService.php'));
}, 'twig.form.renderer' => function () {
    return ($this->privates['twig.form.renderer'] ?? $this->load('getTwig_Form_RendererService.php'));
}, 'twig.command.debug' => function () {
    return ($this->privates['twig.command.debug'] ?? $this->load('getTwig_Command_DebugService.php'));
}, 'twig.command.lint' => function () {
    return ($this->privates['twig.command.lint'] ?? $this->load('getTwig_Command_LintService.php'));
}, 'security.user_value_resolver' => function () {
    return ($this->privates['security.user_value_resolver'] ?? $this->load('getSecurity_UserValueResolverService.php'));
}, 'security.authentication.manager' => function () {
    return ($this->privates['security.authentication.manager'] ?? $this->getSecurity_Authentication_ManagerService());
}, 'security.authentication.trust_resolver' => function () {
    return ($this->privates['security.authentication.trust_resolver'] ?? $this->privates['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken'));
}, 'security.encoder_factory.generic' => function () {
    return ($this->privates['security.encoder_factory.generic'] ?? $this->privates['security.encoder_factory.generic'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array()));
}, 'security.user_password_encoder.generic' => function () {
    return ($this->services['security.password_encoder'] ?? $this->load('getSecurity_PasswordEncoderService.php'));
}, 'security.expression_language' => function () {
    return ($this->privates['security.expression_language'] ?? $this->load('getSecurity_ExpressionLanguageService.php'));
}, 'security.access.decision_manager' => function () {
    return ($this->privates['security.access.decision_manager'] ?? $this->getSecurity_Access_DecisionManagerService());
}, 'security.role_hierarchy' => function () {
    return ($this->privates['security.role_hierarchy'] ?? $this->privates['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy(array()));
}, 'security.access.simple_role_voter' => function () {
    return ($this->privates['security.access.simple_role_voter'] ?? $this->privates['security.access.simple_role_voter'] = new \Symfony\Component\Security\Core\Authorization\Voter\RoleVoter());
}, 'security.access.authenticated_voter' => function () {
    return ($this->privates['security.access.authenticated_voter'] ?? $this->load('getSecurity_Access_AuthenticatedVoterService.php'));
}, 'security.access.expression_voter' => function () {
    return ($this->privates['security.access.expression_voter'] ?? $this->load('getSecurity_Access_ExpressionVoterService.php'));
}, 'security.firewall' => function () {
    return ($this->privates['security.firewall'] ?? $this->getSecurity_FirewallService());
}, 'security.firewall.map' => function () {
    return ($this->privates['security.firewall.map'] ?? $this->getSecurity_Firewall_MapService());
}, 'security.logout_url_generator' => function () {
    return ($this->privates['security.logout_url_generator'] ?? $this->getSecurity_LogoutUrlGeneratorService());
}, 'security.http_utils' => function () {
    return ($this->privates['security.http_utils'] ?? $this->load('getSecurity_HttpUtilsService.php'));
}, 'security.validator.user_password' => function () {
    return ($this->privates['security.validator.user_password'] ?? $this->load('getSecurity_Validator_UserPasswordService.php'));
}, 'cache.security_expression_language' => function () {
    return ($this->privates['cache.security_expression_language'] ?? $this->load('getCache_SecurityExpressionLanguageService.php'));
}, 'security.authentication.retry_entry_point' => function () {
    return ($this->privates['security.authentication.retry_entry_point'] ?? $this->privates['security.authentication.retry_entry_point'] = new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443));
}, 'security.channel_listener' => function () {
    return ($this->privates['security.channel_listener'] ?? $this->load('getSecurity_ChannelListenerService.php'));
}, 'security.access_map' => function () {
    return ($this->privates['security.access_map'] ?? $this->privates['security.access_map'] = new \Symfony\Component\Security\Http\AccessMap());
}, 'security.access_listener' => function () {
    return ($this->privates['security.access_listener'] ?? $this->load('getSecurity_AccessListenerService.php'));
}, 'security.rememberme.response_listener' => function () {
    return ($this->privates['security.rememberme.response_listener'] ?? $this->privates['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener());
}, 'twig.extension.logout_url' => function () {
    return ($this->privates['twig.extension.logout_url'] ?? $this->getTwig_Extension_LogoutUrlService());
}, 'twig.extension.security' => function () {
    return ($this->privates['twig.extension.security'] ?? $this->getTwig_Extension_SecurityService());
}, 'security.user.provider.concrete.in_memory' => function () {
    return ($this->privates['security.user.provider.concrete.in_memory'] ?? $this->privates['security.user.provider.concrete.in_memory'] = new \Symfony\Component\Security\Core\User\InMemoryUserProvider(array()));
}, 'security.firewall.map.config.dev' => function () {
    return ($this->privates['security.firewall.map.config.dev'] ?? $this->load('getSecurity_Firewall_Map_Config_DevService.php'));
}, 'security.firewall.map.context.dev' => function () {
    return ($this->privates['security.firewall.map.context.dev'] ?? $this->load('getSecurity_Firewall_Map_Context_DevService.php'));
}, 'security.firewall.map.config.main' => function () {
    return ($this->privates['security.firewall.map.config.main'] ?? $this->load('getSecurity_Firewall_Map_Config_MainService.php'));
}, 'security.context_listener.0' => function () {
    return ($this->privates['security.context_listener.0'] ?? $this->load('getSecurity_ContextListener_0Service.php'));
}, 'security.authentication.listener.anonymous.main' => function () {
    return ($this->privates['security.authentication.listener.anonymous.main'] ?? $this->load('getSecurity_Authentication_Listener_Anonymous_MainService.php'));
}, 'security.authentication.provider.anonymous.main' => function () {
    return ($this->privates['security.authentication.provider.anonymous.main'] ?? $this->privates['security.authentication.provider.anonymous.main'] = new \Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider($this->getParameter('container.build_hash')));
}, 'security.exception_listener.main' => function () {
    return ($this->privates['security.exception_listener.main'] ?? $this->load('getSecurity_ExceptionListener_MainService.php'));
}, 'security.firewall.map.context.main' => function () {
    return ($this->privates['security.firewall.map.context.main'] ?? $this->load('getSecurity_Firewall_Map_Context_MainService.php'));
}, 'security.command.user_password_encoder' => function () {
    return ($this->privates['security.command.user_password_encoder'] ?? $this->load('getSecurity_Command_UserPasswordEncoderService.php'));
}, 'nelmio_cors.cors_listener' => function () {
    return ($this->privates['nelmio_cors.cors_listener'] ?? $this->getNelmioCors_CorsListenerService());
}, 'nelmio_cors.options_resolver' => function () {
    return ($this->privates['nelmio_cors.options_resolver'] ?? $this->getNelmioCors_OptionsResolverService());
}, 'nelmio_cors.options_provider.config' => function () {
    return ($this->privates['nelmio_cors.options_provider.config'] ?? $this->getNelmioCors_OptionsProvider_ConfigService());
}, 'doctrine_cache.contains_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_cache.contains_command'] ?? $this->services['console.command.public_alias.doctrine_cache.contains_command'] = new \Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand());
}, 'doctrine_cache.delete_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_cache.delete_command'] ?? $this->services['console.command.public_alias.doctrine_cache.delete_command'] = new \Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand());
}, 'doctrine_cache.flush_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_cache.flush_command'] ?? $this->services['console.command.public_alias.doctrine_cache.flush_command'] = new \Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand());
}, 'doctrine_cache.stats_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_cache.stats_command'] ?? $this->services['console.command.public_alias.doctrine_cache.stats_command'] = new \Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand());
}, 'doctrine.dbal.connection_factory' => function () {
    return ($this->privates['doctrine.dbal.connection_factory'] ?? $this->privates['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array()));
}, 'doctrine.twig.doctrine_extension' => function () {
    return ($this->privates['doctrine.twig.doctrine_extension'] ?? $this->privates['doctrine.twig.doctrine_extension'] = new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
}, 'doctrine.database_create_command' => function () {
    return ($this->privates['doctrine.database_create_command'] ?? $this->load('getDoctrine_DatabaseCreateCommandService.php'));
}, 'doctrine.database_drop_command' => function () {
    return ($this->privates['doctrine.database_drop_command'] ?? $this->load('getDoctrine_DatabaseDropCommandService.php'));
}, 'doctrine.generate_entities_command' => function () {
    return ($this->privates['doctrine.generate_entities_command'] ?? $this->load('getDoctrine_GenerateEntitiesCommandService.php'));
}, 'doctrine.mapping_import_command' => function () {
    return ($this->privates['doctrine.mapping_import_command'] ?? $this->load('getDoctrine_MappingImportCommandService.php'));
}, 'doctrine.dbal.default_connection.configuration' => function () {
    return ($this->privates['doctrine.dbal.default_connection.configuration'] ?? $this->privates['doctrine.dbal.default_connection.configuration'] = new \Doctrine\DBAL\Configuration());
}, 'doctrine.dbal.default_connection.event_manager' => function () {
    return ($this->privates['doctrine.dbal.default_connection.event_manager'] ?? $this->load('getDoctrine_Dbal_DefaultConnection_EventManagerService.php'));
}, 'doctrine.orm.proxy_cache_warmer' => function () {
    return ($this->privates['doctrine.orm.proxy_cache_warmer'] ?? $this->load('getDoctrine_Orm_ProxyCacheWarmerService.php'));
}, 'form.type_guesser.doctrine' => function () {
    return ($this->privates['form.type_guesser.doctrine'] ?? $this->load('getForm_TypeGuesser_DoctrineService.php'));
}, 'form.type.entity' => function () {
    return ($this->privates['form.type.entity'] ?? $this->load('getForm_Type_EntityService.php'));
}, 'doctrine.orm.container_repository_factory' => function () {
    return ($this->privates['doctrine.orm.container_repository_factory'] ?? $this->load('getDoctrine_Orm_ContainerRepositoryFactoryService.php'));
}, 'doctrine.orm.validator.unique' => function () {
    return ($this->privates['doctrine.orm.validator.unique'] ?? $this->load('getDoctrine_Orm_Validator_UniqueService.php'));
}, 'doctrine.orm.validator_initializer' => function () {
    return ($this->privates['doctrine.orm.validator_initializer'] ?? $this->getDoctrine_Orm_ValidatorInitializerService());
}, 'doctrine.orm.naming_strategy.underscore' => function () {
    return ($this->privates['doctrine.orm.naming_strategy.underscore'] ?? $this->privates['doctrine.orm.naming_strategy.underscore'] = new \Doctrine\ORM\Mapping\UnderscoreNamingStrategy());
}, 'doctrine.orm.quote_strategy.default' => function () {
    return ($this->privates['doctrine.orm.quote_strategy.default'] ?? $this->privates['doctrine.orm.quote_strategy.default'] = new \Doctrine\ORM\Mapping\DefaultQuoteStrategy());
}, 'doctrine.cache_clear_metadata_command' => function () {
    return ($this->privates['doctrine.cache_clear_metadata_command'] ?? $this->load('getDoctrine_CacheClearMetadataCommandService.php'));
}, 'doctrine.cache_clear_query_cache_command' => function () {
    return ($this->privates['doctrine.cache_clear_query_cache_command'] ?? $this->load('getDoctrine_CacheClearQueryCacheCommandService.php'));
}, 'doctrine.cache_clear_result_command' => function () {
    return ($this->privates['doctrine.cache_clear_result_command'] ?? $this->load('getDoctrine_CacheClearResultCommandService.php'));
}, 'doctrine.cache_collection_region_command' => function () {
    return ($this->privates['doctrine.cache_collection_region_command'] ?? $this->load('getDoctrine_CacheCollectionRegionCommandService.php'));
}, 'doctrine.mapping_convert_command' => function () {
    return ($this->privates['doctrine.mapping_convert_command'] ?? $this->load('getDoctrine_MappingConvertCommandService.php'));
}, 'doctrine.schema_create_command' => function () {
    return ($this->privates['doctrine.schema_create_command'] ?? $this->load('getDoctrine_SchemaCreateCommandService.php'));
}, 'doctrine.schema_drop_command' => function () {
    return ($this->privates['doctrine.schema_drop_command'] ?? $this->load('getDoctrine_SchemaDropCommandService.php'));
}, 'doctrine.ensure_production_settings_command' => function () {
    return ($this->privates['doctrine.ensure_production_settings_command'] ?? $this->load('getDoctrine_EnsureProductionSettingsCommandService.php'));
}, 'doctrine.clear_entity_region_command' => function () {
    return ($this->privates['doctrine.clear_entity_region_command'] ?? $this->load('getDoctrine_ClearEntityRegionCommandService.php'));
}, 'doctrine.database_import_command' => function () {
    return ($this->privates['doctrine.database_import_command'] ?? $this->load('getDoctrine_DatabaseImportCommandService.php'));
}, 'doctrine.mapping_info_command' => function () {
    return ($this->privates['doctrine.mapping_info_command'] ?? $this->load('getDoctrine_MappingInfoCommandService.php'));
}, 'doctrine.clear_query_region_command' => function () {
    return ($this->privates['doctrine.clear_query_region_command'] ?? $this->load('getDoctrine_ClearQueryRegionCommandService.php'));
}, 'doctrine.query_dql_command' => function () {
    return ($this->privates['doctrine.query_dql_command'] ?? $this->load('getDoctrine_QueryDqlCommandService.php'));
}, 'doctrine.query_sql_command' => function () {
    return ($this->privates['doctrine.query_sql_command'] ?? $this->load('getDoctrine_QuerySqlCommandService.php'));
}, 'doctrine.schema_update_command' => function () {
    return ($this->privates['doctrine.schema_update_command'] ?? $this->load('getDoctrine_SchemaUpdateCommandService.php'));
}, 'doctrine.schema_validate_command' => function () {
    return ($this->privates['doctrine.schema_validate_command'] ?? $this->load('getDoctrine_SchemaValidateCommandService.php'));
}, 'doctrine.orm.default_configuration' => function () {
    return ($this->privates['doctrine.orm.default_configuration'] ?? $this->load('getDoctrine_Orm_DefaultConfigurationService.php'));
}, 'doctrine.orm.default_annotation_metadata_driver' => function () {
    return ($this->privates['doctrine.orm.default_annotation_metadata_driver'] ?? $this->load('getDoctrine_Orm_DefaultAnnotationMetadataDriverService.php'));
}, 'doctrine.orm.default_metadata_driver' => function () {
    return ($this->privates['doctrine.orm.default_metadata_driver'] ?? $this->load('getDoctrine_Orm_DefaultMetadataDriverService.php'));
}, 'doctrine.orm.default_entity_listener_resolver' => function () {
    return ($this->privates['doctrine.orm.default_entity_listener_resolver'] ?? $this->privates['doctrine.orm.default_entity_listener_resolver'] = new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver($this));
}, 'doctrine.orm.default_listeners.attach_entity_listeners' => function () {
    return ($this->privates['doctrine.orm.default_listeners.attach_entity_listeners'] ?? $this->privates['doctrine.orm.default_listeners.attach_entity_listeners'] = new \Doctrine\ORM\Tools\AttachEntityListenersListener());
}, 'doctrine.orm.default_manager_configurator' => function () {
    return ($this->privates['doctrine.orm.default_manager_configurator'] ?? $this->privates['doctrine.orm.default_manager_configurator'] = new \Doctrine\Bundle\DoctrineBundle\ManagerConfigurator(array(), array()));
}, 'doctrine.orm.default_entity_manager.metadata_factory' => function () {
    return ($this->privates['doctrine.orm.default_entity_manager.metadata_factory'] ?? $this->load('getDoctrine_Orm_DefaultEntityManager_MetadataFactoryService.php'));
}, 'doctrine.orm.default_entity_manager.property_info_extractor' => function () {
    return ($this->privates['doctrine.orm.default_entity_manager.property_info_extractor'] ?? $this->load('getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService.php'));
}, 'api_platform.negotiator' => function () {
    return ($this->privates['api_platform.negotiator'] ?? $this->privates['api_platform.negotiator'] = new \Negotiation\Negotiator());
}, 'api_platform.resource_class_resolver' => function () {
    return ($this->privates['api_platform.resource_class_resolver'] ?? $this->getApiPlatform_ResourceClassResolverService());
}, 'api_platform.operation_method_resolver' => function () {
    return ($this->privates['api_platform.operation_method_resolver'] ?? $this->getApiPlatform_OperationMethodResolverService());
}, 'api_platform.route_name_resolver.cached' => function () {
    return ($this->privates['api_platform.route_name_resolver.cached'] ?? $this->getApiPlatform_RouteNameResolver_CachedService());
}, 'api_platform.route_loader' => function () {
    return ($this->privates['api_platform.route_loader'] ?? $this->load('getApiPlatform_RouteLoaderService.php'));
}, 'api_platform.router' => function () {
    return ($this->privates['api_platform.router'] ?? $this->getApiPlatform_RouterService());
}, 'api_platform.iri_converter' => function () {
    return ($this->privates['api_platform.iri_converter'] ?? $this->getApiPlatform_IriConverterService());
}, 'api_platform.formats_provider' => function () {
    return ($this->privates['api_platform.formats_provider'] ?? $this->getApiPlatform_FormatsProviderService());
}, 'api_platform.serializer.context_builder.filter' => function () {
    return ($this->privates['api_platform.serializer.context_builder.filter'] ?? $this->getApiPlatform_Serializer_ContextBuilder_FilterService());
}, 'api_platform.serializer.normalizer.item' => function () {
    return ($this->privates['api_platform.serializer.normalizer.item'] ?? $this->getApiPlatform_Serializer_Normalizer_ItemService());
}, 'api_platform.operation_path_resolver.router' => function () {
    return ($this->privates['api_platform.operation_path_resolver.router'] ?? $this->getApiPlatform_OperationPathResolver_RouterService());
}, 'api_platform.operation_path_resolver.custom' => function () {
    return ($this->privates['api_platform.operation_path_resolver.custom'] ?? $this->getApiPlatform_OperationPathResolver_CustomService());
}, 'api_platform.operation_path_resolver.generator' => function () {
    return ($this->privates['api_platform.operation_path_resolver.generator'] ?? $this->getApiPlatform_OperationPathResolver_GeneratorService());
}, 'api_platform.path_segment_name_generator.underscore' => function () {
    return ($this->privates['api_platform.path_segment_name_generator.underscore'] ?? $this->privates['api_platform.path_segment_name_generator.underscore'] = new \ApiPlatform\Core\Operation\UnderscorePathSegmentNameGenerator());
}, 'api_platform.listener.request.add_format' => function () {
    return ($this->privates['api_platform.listener.request.add_format'] ?? $this->getApiPlatform_Listener_Request_AddFormatService());
}, 'api_platform.listener.request.read' => function () {
    return ($this->privates['api_platform.listener.request.read'] ?? $this->getApiPlatform_Listener_Request_ReadService());
}, 'api_platform.listener.view.write' => function () {
    return ($this->privates['api_platform.listener.view.write'] ?? $this->load('getApiPlatform_Listener_View_WriteService.php'));
}, 'api_platform.listener.request.deserialize' => function () {
    return ($this->privates['api_platform.listener.request.deserialize'] ?? $this->getApiPlatform_Listener_Request_DeserializeService());
}, 'api_platform.listener.view.serialize' => function () {
    return ($this->privates['api_platform.listener.view.serialize'] ?? $this->load('getApiPlatform_Listener_View_SerializeService.php'));
}, 'api_platform.listener.view.respond' => function () {
    return ($this->privates['api_platform.listener.view.respond'] ?? $this->privates['api_platform.listener.view.respond'] = new \ApiPlatform\Core\EventListener\RespondListener());
}, 'api_platform.listener.exception.validation' => function () {
    return ($this->privates['api_platform.listener.exception.validation'] ?? $this->load('getApiPlatform_Listener_Exception_ValidationService.php'));
}, 'api_platform.listener.exception' => function () {
    return ($this->privates['api_platform.listener.exception'] ?? $this->load('getApiPlatform_Listener_ExceptionService.php'));
}, 'api_platform.identifiers_extractor.cached' => function () {
    return ($this->privates['api_platform.identifiers_extractor.cached'] ?? $this->getApiPlatform_IdentifiersExtractor_CachedService());
}, 'api_platform.identifier.converter' => function () {
    return ($this->privates['api_platform.identifier.converter'] ?? $this->getApiPlatform_Identifier_ConverterService());
}, 'api_platform.identifier.integer' => function () {
    return ($this->privates['api_platform.identifier.integer'] ?? $this->privates['api_platform.identifier.integer'] = new \ApiPlatform\Core\Identifier\Normalizer\IntegerDenormalizer());
}, 'api_platform.identifier.date_normalizer' => function () {
    return ($this->privates['api_platform.identifier.date_normalizer'] ?? $this->privates['api_platform.identifier.date_normalizer'] = new \ApiPlatform\Core\Identifier\Normalizer\DateTimeIdentifierDenormalizer());
}, 'api_platform.subresource_operation_factory.cached' => function () {
    return ($this->privates['api_platform.subresource_operation_factory.cached'] ?? $this->getApiPlatform_SubresourceOperationFactory_CachedService());
}, 'api_platform.cache.route_name_resolver' => function () {
    return ($this->privates['api_platform.cache.route_name_resolver'] ?? $this->getApiPlatform_Cache_RouteNameResolverService());
}, 'api_platform.cache.identifiers_extractor' => function () {
    return ($this->privates['api_platform.cache.identifiers_extractor'] ?? $this->getApiPlatform_Cache_IdentifiersExtractorService());
}, 'api_platform.cache.subresource_operation_factory' => function () {
    return ($this->privates['api_platform.cache.subresource_operation_factory'] ?? $this->getApiPlatform_Cache_SubresourceOperationFactoryService());
}, 'api_platform.data_persister' => function () {
    return ($this->privates['api_platform.data_persister'] ?? $this->load('getApiPlatform_DataPersisterService.php'));
}, 'api_platform.item_data_provider' => function () {
    return ($this->privates['api_platform.item_data_provider'] ?? $this->getApiPlatform_ItemDataProviderService());
}, 'api_platform.collection_data_provider' => function () {
    return ($this->privates['api_platform.collection_data_provider'] ?? $this->getApiPlatform_CollectionDataProviderService());
}, 'api_platform.subresource_data_provider' => function () {
    return ($this->privates['api_platform.subresource_data_provider'] ?? $this->getApiPlatform_SubresourceDataProviderService());
}, 'api_platform.filter_locator' => function () {
    return ($this->privates['api_platform.filter_locator'] ?? $this->privates['api_platform.filter_locator'] = new \Symfony\Component\DependencyInjection\ServiceLocator(array()));
}, 'api_platform.validator' => function () {
    return ($this->privates['api_platform.validator'] ?? $this->load('getApiPlatform_ValidatorService.php'));
}, 'api_platform.metadata.property.metadata_factory.validator' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.validator'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_ValidatorService());
}, 'api_platform.listener.view.validate' => function () {
    return ($this->privates['api_platform.listener.view.validate'] ?? $this->load('getApiPlatform_Listener_View_ValidateService.php'));
}, 'api_platform.listener.view.validate_query_parameters' => function () {
    return ($this->privates['api_platform.listener.view.validate_query_parameters'] ?? $this->getApiPlatform_Listener_View_ValidateQueryParametersService());
}, 'api_platform.security.expression_language' => function () {
    return ($this->privates['api_platform.security.expression_language'] ?? $this->privates['api_platform.security.expression_language'] = new \ApiPlatform\Core\Security\ExpressionLanguage());
}, 'api_platform.security.resource_access_checker' => function () {
    return ($this->privates['api_platform.security.resource_access_checker'] ?? $this->getApiPlatform_Security_ResourceAccessCheckerService());
}, 'api_platform.security.listener.request.deny_access' => function () {
    return ($this->privates['api_platform.security.listener.request.deny_access'] ?? $this->getApiPlatform_Security_Listener_Request_DenyAccessService());
}, 'api_platform.metadata.resource.name_collection_factory.cached' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_CachedService());
}, 'api_platform.metadata.resource.metadata_factory.short_name' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.short_name'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_ShortNameService());
}, 'api_platform.metadata.resource.metadata_factory.operation' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.operation'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_OperationService());
}, 'api_platform.metadata.resource.metadata_factory.cached' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService());
}, 'api_platform.metadata.property.name_collection_factory.property_info' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.property_info'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_PropertyInfoService());
}, 'api_platform.metadata.property.name_collection_factory.inherited' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.inherited'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_InheritedService());
}, 'api_platform.metadata.property.name_collection_factory.cached' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService());
}, 'api_platform.metadata.property.metadata_factory.property_info' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.property_info'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_PropertyInfoService());
}, 'api_platform.metadata.property.metadata_factory.inherited' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.inherited'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_InheritedService());
}, 'api_platform.metadata.property.metadata_factory.serializer' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.serializer'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_SerializerService());
}, 'api_platform.metadata.property.metadata_factory.cached' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_CachedService());
}, 'api_platform.cache.metadata.resource' => function () {
    return ($this->privates['api_platform.cache.metadata.resource'] ?? $this->getApiPlatform_Cache_Metadata_ResourceService());
}, 'api_platform.cache.metadata.property' => function () {
    return ($this->privates['api_platform.cache.metadata.property'] ?? $this->getApiPlatform_Cache_Metadata_PropertyService());
}, 'api_platform.metadata.extractor.xml' => function () {
    return ($this->privates['api_platform.metadata.extractor.xml'] ?? $this->privates['api_platform.metadata.extractor.xml'] = new \ApiPlatform\Core\Metadata\Extractor\XmlExtractor(array()));
}, 'api_platform.metadata.resource.name_collection_factory.xml' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.xml'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_XmlService());
}, 'api_platform.metadata.resource.metadata_factory.xml' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.xml'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_XmlService());
}, 'api_platform.metadata.property.name_collection_factory.xml' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.xml'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_XmlService());
}, 'api_platform.metadata.property.metadata_factory.xml' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.xml'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_XmlService());
}, 'api_platform.metadata.resource.name_collection_factory.annotation' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.annotation'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_AnnotationService());
}, 'api_platform.metadata.resource.metadata_factory.annotation' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.annotation'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_AnnotationService());
}, 'api_platform.metadata.resource.filter_metadata_factory.annotation' => function () {
    return ($this->privates['api_platform.metadata.resource.filter_metadata_factory.annotation'] ?? $this->getApiPlatform_Metadata_Resource_FilterMetadataFactory_AnnotationService());
}, 'api_platform.metadata.property.metadata_factory.annotation' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.annotation'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_AnnotationService());
}, 'api_platform.metadata.subresource.metadata_factory.annotation' => function () {
    return ($this->privates['api_platform.metadata.subresource.metadata_factory.annotation'] ?? $this->getApiPlatform_Metadata_Subresource_MetadataFactory_AnnotationService());
}, 'api_platform.metadata.extractor.yaml' => function () {
    return ($this->privates['api_platform.metadata.extractor.yaml'] ?? $this->privates['api_platform.metadata.extractor.yaml'] = new \ApiPlatform\Core\Metadata\Extractor\YamlExtractor(array()));
}, 'api_platform.metadata.resource.name_collection_factory.yaml' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.yaml'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_YamlService());
}, 'api_platform.metadata.resource.metadata_factory.yaml' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.yaml'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_YamlService());
}, 'api_platform.metadata.property.name_collection_factory.yaml' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.yaml'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_YamlService());
}, 'api_platform.metadata.property.metadata_factory.yaml' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.yaml'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_YamlService());
}, 'api_platform.metadata.resource.metadata_factory.php_doc' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.php_doc'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_PhpDocService());
}, 'api_platform.swagger.normalizer.api_gateway' => function () {
    return ($this->privates['api_platform.swagger.normalizer.api_gateway'] ?? $this->getApiPlatform_Swagger_Normalizer_ApiGatewayService());
}, 'api_platform.swagger.command.swagger_command' => function () {
    return ($this->services['console.command.public_alias.api_platform.swagger.command.swagger_command'] ?? $this->load('getConsole_Command_PublicAlias_ApiPlatform_Swagger_Command_SwaggerCommandService.php'));
}, 'api_platform.swagger.listener.ui' => function () {
    return ($this->privates['api_platform.swagger.listener.ui'] ?? $this->privates['api_platform.swagger.listener.ui'] = new \ApiPlatform\Core\Bridge\Symfony\Bundle\EventListener\SwaggerUiListener());
}, 'api_platform.jsonld.context_builder' => function () {
    return ($this->privates['api_platform.jsonld.context_builder'] ?? $this->getApiPlatform_Jsonld_ContextBuilderService());
}, 'api_platform.jsonld.normalizer.item' => function () {
    return ($this->privates['api_platform.jsonld.normalizer.item'] ?? $this->getApiPlatform_Jsonld_Normalizer_ItemService());
}, 'api_platform.jsonld.encoder' => function () {
    return ($this->privates['api_platform.jsonld.encoder'] ?? $this->privates['api_platform.jsonld.encoder'] = new \ApiPlatform\Core\Serializer\JsonEncoder('jsonld'));
}, 'api_platform.hydra.normalizer.documentation' => function () {
    return ($this->privates['api_platform.hydra.normalizer.documentation'] ?? $this->getApiPlatform_Hydra_Normalizer_DocumentationService());
}, 'api_platform.hydra.listener.response.add_link_header' => function () {
    return ($this->privates['api_platform.hydra.listener.response.add_link_header'] ?? $this->getApiPlatform_Hydra_Listener_Response_AddLinkHeaderService());
}, 'api_platform.hydra.normalizer.constraint_violation_list' => function () {
    return ($this->privates['api_platform.hydra.normalizer.constraint_violation_list'] ?? $this->getApiPlatform_Hydra_Normalizer_ConstraintViolationListService());
}, 'api_platform.hydra.normalizer.entrypoint' => function () {
    return ($this->privates['api_platform.hydra.normalizer.entrypoint'] ?? $this->getApiPlatform_Hydra_Normalizer_EntrypointService());
}, 'api_platform.hydra.normalizer.error' => function () {
    return ($this->privates['api_platform.hydra.normalizer.error'] ?? $this->getApiPlatform_Hydra_Normalizer_ErrorService());
}, 'api_platform.hydra.normalizer.partial_collection_view' => function () {
    return ($this->privates['api_platform.hydra.normalizer.partial_collection_view'] ?? $this->getApiPlatform_Hydra_Normalizer_PartialCollectionViewService());
}, 'api_platform.hydra.normalizer.collection_filters' => function () {
    return ($this->privates['api_platform.hydra.normalizer.collection_filters'] ?? $this->getApiPlatform_Hydra_Normalizer_CollectionFiltersService());
}, 'api_platform.problem.encoder' => function () {
    return ($this->privates['api_platform.problem.encoder'] ?? $this->privates['api_platform.problem.encoder'] = new \ApiPlatform\Core\Serializer\JsonEncoder('jsonproblem'));
}, 'api_platform.problem.normalizer.constraint_violation_list' => function () {
    return ($this->privates['api_platform.problem.normalizer.constraint_violation_list'] ?? $this->privates['api_platform.problem.normalizer.constraint_violation_list'] = new \ApiPlatform\Core\Problem\Serializer\ConstraintViolationListNormalizer(array(), NULL));
}, 'api_platform.problem.normalizer.error' => function () {
    return ($this->privates['api_platform.problem.normalizer.error'] ?? $this->privates['api_platform.problem.normalizer.error'] = new \ApiPlatform\Core\Problem\Serializer\ErrorNormalizer(false));
}, 'api_platform.graphql.executor' => function () {
    return ($this->privates['api_platform.graphql.executor'] ?? $this->privates['api_platform.graphql.executor'] = new \ApiPlatform\Core\GraphQl\Executor());
}, 'api_platform.graphql.resolver.factory.collection' => function () {
    return ($this->privates['api_platform.graphql.resolver.factory.collection'] ?? $this->load('getApiPlatform_Graphql_Resolver_Factory_CollectionService.php'));
}, 'api_platform.graphql.resolver.factory.item_mutation' => function () {
    return ($this->privates['api_platform.graphql.resolver.factory.item_mutation'] ?? $this->load('getApiPlatform_Graphql_Resolver_Factory_ItemMutationService.php'));
}, 'api_platform.graphql.resolver.item' => function () {
    return ($this->privates['api_platform.graphql.resolver.item'] ?? $this->load('getApiPlatform_Graphql_Resolver_ItemService.php'));
}, 'api_platform.graphql.resolver.resource_field' => function () {
    return ($this->privates['api_platform.graphql.resolver.resource_field'] ?? $this->load('getApiPlatform_Graphql_Resolver_ResourceFieldService.php'));
}, 'api_platform.graphql.schema_builder' => function () {
    return ($this->privates['api_platform.graphql.schema_builder'] ?? $this->load('getApiPlatform_Graphql_SchemaBuilderService.php'));
}, 'api_platform.graphql.normalizer.item' => function () {
    return ($this->privates['api_platform.graphql.normalizer.item'] ?? $this->getApiPlatform_Graphql_Normalizer_ItemService());
}, 'api_platform.doctrine.orm.data_persister' => function () {
    return ($this->privates['api_platform.doctrine.orm.data_persister'] ?? $this->load('getApiPlatform_Doctrine_Orm_DataPersisterService.php'));
}, 'api_platform.doctrine.orm.default.collection_data_provider' => function () {
    return ($this->privates['api_platform.doctrine.orm.default.collection_data_provider'] ?? $this->load('getApiPlatform_Doctrine_Orm_Default_CollectionDataProviderService.php'));
}, 'api_platform.doctrine.orm.default.item_data_provider' => function () {
    return ($this->privates['api_platform.doctrine.orm.default.item_data_provider'] ?? $this->load('getApiPlatform_Doctrine_Orm_Default_ItemDataProviderService.php'));
}, 'api_platform.doctrine.orm.default.subresource_data_provider' => function () {
    return ($this->privates['api_platform.doctrine.orm.default.subresource_data_provider'] ?? $this->load('getApiPlatform_Doctrine_Orm_Default_SubresourceDataProviderService.php'));
}, 'api_platform.doctrine.orm.metadata.property.metadata_factory' => function () {
    return ($this->privates['api_platform.doctrine.orm.metadata.property.metadata_factory'] ?? $this->getApiPlatform_Doctrine_Orm_Metadata_Property_MetadataFactoryService());
}, 'api_platform.doctrine.orm.query_extension.eager_loading' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.eager_loading'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_EagerLoadingService.php'));
}, 'api_platform.doctrine.orm.query_extension.filter' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.filter'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_FilterService.php'));
}, 'api_platform.doctrine.orm.query_extension.filter_eager_loading' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.filter_eager_loading'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_FilterEagerLoadingService.php'));
}, 'api_platform.doctrine.orm.query_extension.pagination' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.pagination'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_PaginationService.php'));
}, 'api_platform.doctrine.orm.query_extension.order' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.order'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_OrderService.php'));
}, 'api_platform.http_cache.listener.response.configure' => function () {
    return ($this->privates['api_platform.http_cache.listener.response.configure'] ?? $this->getApiPlatform_HttpCache_Listener_Response_ConfigureService());
}, 'doctrine_migrations.diff_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.diff_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.diff_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand());
}, 'doctrine_migrations.execute_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.execute_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.execute_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand());
}, 'doctrine_migrations.generate_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.generate_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.generate_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand());
}, 'doctrine_migrations.latest_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.latest_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.latest_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand());
}, 'doctrine_migrations.migrate_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.migrate_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.migrate_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand());
}, 'doctrine_migrations.status_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.status_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.status_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand());
}, 'doctrine_migrations.version_command' => function () {
    return ($this->services['console.command.public_alias.doctrine_migrations.version_command'] ?? $this->services['console.command.public_alias.doctrine_migrations.version_command'] = new \Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand());
}, 'sensio_framework_extra.controller.listener' => function () {
    return ($this->privates['sensio_framework_extra.controller.listener'] ?? $this->getSensioFrameworkExtra_Controller_ListenerService());
}, 'sensio_framework_extra.converter.listener' => function () {
    return ($this->privates['sensio_framework_extra.converter.listener'] ?? $this->getSensioFrameworkExtra_Converter_ListenerService());
}, 'sensio_framework_extra.converter.manager' => function () {
    return ($this->privates['sensio_framework_extra.converter.manager'] ?? $this->getSensioFrameworkExtra_Converter_ManagerService());
}, 'sensio_framework_extra.converter.doctrine.orm' => function () {
    return ($this->privates['sensio_framework_extra.converter.doctrine.orm'] ?? $this->getSensioFrameworkExtra_Converter_Doctrine_OrmService());
}, 'framework_extra_bundle.date_time_param_converter' => function () {
    return ($this->privates['framework_extra_bundle.date_time_param_converter'] ?? $this->privates['framework_extra_bundle.date_time_param_converter'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter());
}, 'sensio_framework_extra.converter.doctrine.orm.expression_language.default' => function () {
    return ($this->privates['sensio_framework_extra.converter.doctrine.orm.expression_language.default'] ?? $this->privates['sensio_framework_extra.converter.doctrine.orm.expression_language.default'] = new \Symfony\Component\ExpressionLanguage\ExpressionLanguage());
}, 'sensio_framework_extra.view.guesser' => function () {
    return ($this->privates['sensio_framework_extra.view.guesser'] ?? $this->privates['sensio_framework_extra.view.guesser'] = new \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser(($this->services['kernel'] ?? $this->get('kernel', 1))));
}, 'sensio_framework_extra.view.listener' => function () {
    return ($this->privates['sensio_framework_extra.view.listener'] ?? $this->getSensioFrameworkExtra_View_ListenerService());
}, 'sensio_framework_extra.cache.listener' => function () {
    return ($this->privates['sensio_framework_extra.cache.listener'] ?? $this->privates['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener());
}, 'sensio_framework_extra.security.listener' => function () {
    return ($this->privates['sensio_framework_extra.security.listener'] ?? $this->getSensioFrameworkExtra_Security_ListenerService());
}, 'sensio_framework_extra.security.expression_language.default' => function () {
    return ($this->privates['sensio_framework_extra.security.expression_language.default'] ?? $this->privates['sensio_framework_extra.security.expression_language.default'] = new \Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage());
}, 'framework_extra_bundle.event.is_granted' => function () {
    return ($this->privates['framework_extra_bundle.event.is_granted'] ?? $this->getFrameworkExtraBundle_Event_IsGrantedService());
}, 'framework_extra_bundle.argument_name_convertor' => function () {
    return ($this->privates['framework_extra_bundle.argument_name_convertor'] ?? $this->getFrameworkExtraBundle_ArgumentNameConvertorService());
}, 'monolog.logger' => function () {
    return ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService());
}, 'monolog.processor.psr_log_message' => function () {
    return ($this->privates['monolog.processor.psr_log_message'] ?? $this->privates['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor());
}, 'monolog.handler.main' => function () {
    return ($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService());
}, 'monolog.logger.request' => function () {
    return ($this->privates['monolog.logger.request'] ?? $this->getMonolog_Logger_RequestService());
}, 'monolog.logger.console' => function () {
    return ($this->privates['monolog.logger.console'] ?? $this->load('getMonolog_Logger_ConsoleService.php'));
}, 'monolog.logger.cache' => function () {
    return ($this->privates['monolog.logger.cache'] ?? $this->getMonolog_Logger_CacheService());
}, 'monolog.logger.php' => function () {
    return ($this->privates['monolog.logger.php'] ?? $this->getMonolog_Logger_PhpService());
}, 'monolog.logger.router' => function () {
    return ($this->privates['monolog.logger.router'] ?? $this->getMonolog_Logger_RouterService());
}, 'monolog.logger.security' => function () {
    return ($this->privates['monolog.logger.security'] ?? $this->load('getMonolog_Logger_SecurityService.php'));
}, 'serializer.mapping.cache_class_metadata_factory.inner' => function () {
    return ($this->privates['serializer.mapping.cache_class_metadata_factory.inner'] ?? $this->getSerializer_Mapping_CacheClassMetadataFactory_InnerService());
}, 'api_platform.serializer.context_builder.filter.inner' => function () {
    return ($this->privates['api_platform.serializer.context_builder.filter.inner'] ?? $this->getApiPlatform_Serializer_ContextBuilder_Filter_InnerService());
}, 'api_platform.identifiers_extractor.cached.inner' => function () {
    return ($this->privates['api_platform.identifiers_extractor.cached.inner'] ?? $this->getApiPlatform_IdentifiersExtractor_Cached_InnerService());
}, 'api_platform.swagger.normalizer.api_gateway.inner' => function () {
    return ($this->privates['api_platform.swagger.normalizer.api_gateway.inner'] ?? $this->getApiPlatform_Swagger_Normalizer_ApiGateway_InnerService());
}, 'api_platform.hydra.normalizer.partial_collection_view.inner' => function () {
    return ($this->privates['api_platform.hydra.normalizer.partial_collection_view.inner'] ?? $this->getApiPlatform_Hydra_Normalizer_PartialCollectionView_InnerService());
}, 'api_platform.route_name_resolver.cached.inner' => function () {
    return ($this->privates['api_platform.route_name_resolver.cached.inner'] ?? $this->getApiPlatform_RouteNameResolver_Cached_InnerService());
}, 'api_platform.subresource_operation_factory.cached.inner' => function () {
    return ($this->privates['api_platform.subresource_operation_factory.cached.inner'] ?? $this->getApiPlatform_SubresourceOperationFactory_Cached_InnerService());
}, 'Psr\\Container\\ContainerInterface' => function () {
    return $this;
}, 'Symfony\\Component\\DependencyInjection\\ContainerInterface' => function () {
    return $this;
}, 'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => function () {
    return ($this->privates['parameter_bag'] ?? $this->privates['parameter_bag'] = new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($this));
}, 'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => function () {
    return ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService());
}, 'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => function () {
    return ($this->services['http_kernel'] ?? $this->getHttpKernelService());
}, 'Symfony\\Component\\HttpFoundation\\RequestStack' => function () {
    return ($this->services['request_stack'] ?? $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack());
}, 'Symfony\\Component\\HttpKernel\\KernelInterface' => function () {
    return ($this->services['kernel'] ?? $this->get('kernel', 1));
}, 'Symfony\\Component\\Filesystem\\Filesystem' => function () {
    return ($this->services['filesystem'] ?? $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem());
}, 'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => function () {
    return ($this->privates['file_locator'] ?? $this->privates['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator(($this->services['kernel'] ?? $this->get('kernel', 1)), ($this->targetDirs[3].'/src/Resources'), array(0 => ($this->targetDirs[3].'/src'))));
}, 'Psr\\Cache\\CacheItemPoolInterface' => function () {
    return ($this->services['cache.app'] ?? $this->load('getCache_AppService.php'));
}, 'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => function () {
    return ($this->services['cache.app'] ?? $this->load('getCache_AppService.php'));
}, 'Symfony\\Component\\Translation\\TranslatorInterface' => function () {
    return ($this->services['translator'] ?? $this->getTranslatorService());
}, 'Symfony\\Component\\HttpFoundation\\Session\\SessionInterface' => function () {
    return ($this->services['session'] ?? $this->load('getSessionService.php'));
}, 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface' => function () {
    return ($this->privates['session.storage.mock_file'] ?? $this->load('getSession_Storage_MockFileService.php'));
}, 'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBagInterface' => function () {
    return ($this->privates['session.flash_bag'] ?? $this->privates['session.flash_bag'] = new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
}, 'session.storage.filesystem' => function () {
    return ($this->privates['session.storage.mock_file'] ?? $this->load('getSession_Storage_MockFileService.php'));
}, 'session.storage' => function () {
    return ($this->privates['session.storage.mock_file'] ?? $this->load('getSession_Storage_MockFileService.php'));
}, 'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface' => function () {
    return ($this->privates['security.csrf.token_generator'] ?? $this->privates['security.csrf.token_generator'] = new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator());
}, 'Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface' => function () {
    return ($this->privates['security.csrf.token_storage'] ?? $this->load('getSecurity_Csrf_TokenStorageService.php'));
}, 'Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface' => function () {
    return ($this->services['security.csrf.token_manager'] ?? $this->load('getSecurity_Csrf_TokenManagerService.php'));
}, 'Symfony\\Component\\Form\\ResolvedFormTypeFactoryInterface' => function () {
    return ($this->privates['form.resolved_type_factory'] ?? $this->privates['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory());
}, 'Symfony\\Component\\Form\\FormRegistryInterface' => function () {
    return ($this->privates['form.registry'] ?? $this->load('getForm_RegistryService.php'));
}, 'Symfony\\Component\\Form\\FormFactoryInterface' => function () {
    return ($this->services['form.factory'] ?? $this->load('getForm_FactoryService.php'));
}, 'form.property_accessor' => function () {
    return ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService());
}, 'form.choice_list_factory' => function () {
    return ($this->privates['form.choice_list_factory.cached'] ?? $this->load('getForm_ChoiceListFactory_CachedService.php'));
}, 'Symfony\\Component\\Asset\\Packages' => function () {
    return ($this->privates['assets.packages'] ?? $this->getAssets_PackagesService());
}, 'Symfony\\Component\\Validator\\Validator\\ValidatorInterface' => function () {
    return ($this->services['validator'] ?? $this->getValidatorService());
}, 'validator.mapping.class_metadata_factory' => function () {
    return ($this->services['validator'] ?? $this->getValidatorService());
}, 'Symfony\\Component\\Translation\\Reader\\TranslationReaderInterface' => function () {
    return ($this->privates['translation.reader'] ?? $this->load('getTranslation_ReaderService.php'));
}, 'Symfony\\Component\\Translation\\Extractor\\ExtractorInterface' => function () {
    return ($this->privates['translation.extractor'] ?? $this->load('getTranslation_ExtractorService.php'));
}, 'Symfony\\Component\\Translation\\Writer\\TranslationWriterInterface' => function () {
    return ($this->privates['translation.writer'] ?? $this->load('getTranslation_WriterService.php'));
}, 'translator.formatter' => function () {
    return ($this->privates['translator.formatter.default'] ?? $this->getTranslator_Formatter_DefaultService());
}, 'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => function () {
    return ($this->privates['debug.file_link_formatter'] ?? $this->privates['debug.file_link_formatter'] = new \Symfony\Component\HttpKernel\Debug\FileLinkFormatter(NULL));
}, 'Symfony\\Component\\Routing\\RouterInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\RequestContextAwareInterface' => function () {
    return ($this->services['router'] ?? $this->getRouterService());
}, 'Symfony\\Component\\Routing\\RequestContext' => function () {
    return ($this->privates['router.request_context'] ?? $this->getRouter_RequestContextService());
}, 'annotation_reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());
}, 'Doctrine\\Common\\Annotations\\Reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());
}, 'Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface' => function () {
    return ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService());
}, 'Symfony\\Component\\Serializer\\SerializerInterface' => function () {
    return ($this->services['serializer'] ?? $this->getSerializerService());
}, 'Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface' => function () {
    return ($this->services['serializer'] ?? $this->getSerializerService());
}, 'Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface' => function () {
    return ($this->services['serializer'] ?? $this->getSerializerService());
}, 'Symfony\\Component\\Serializer\\Encoder\\EncoderInterface' => function () {
    return ($this->services['serializer'] ?? $this->getSerializerService());
}, 'Symfony\\Component\\Serializer\\Encoder\\DecoderInterface' => function () {
    return ($this->services['serializer'] ?? $this->getSerializerService());
}, 'serializer.property_accessor' => function () {
    return ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService());
}, 'Symfony\\Component\\Serializer\\Mapping\\ClassDiscriminatorResolverInterface' => function () {
    return ($this->privates['serializer.mapping.class_discriminator_resolver'] ?? $this->getSerializer_Mapping_ClassDiscriminatorResolverService());
}, 'Symfony\\Component\\Serializer\\Normalizer\\ObjectNormalizer' => function () {
    return ($this->privates['serializer.normalizer.object'] ?? $this->getSerializer_Normalizer_ObjectService());
}, 'Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface' => function () {
    return ($this->privates['serializer.mapping.cache_class_metadata_factory'] ?? $this->getSerializer_Mapping_CacheClassMetadataFactoryService());
}, 'Symfony\\Component\\PropertyInfo\\PropertyInfoExtractorInterface' => function () {
    return ($this->privates['property_info'] ?? $this->getPropertyInfoService());
}, 'Twig_Environment' => function () {
    return ($this->services['twig'] ?? $this->getTwigService());
}, 'Twig\\Environment' => function () {
    return ($this->services['twig'] ?? $this->getTwigService());
}, 'Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface' => function () {
    return ($this->services['security.authorization_checker'] ?? $this->getSecurity_AuthorizationCheckerService());
}, 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface' => function () {
    return ($this->services['security.token_storage'] ?? $this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage());
}, 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface' => function () {
    return ($this->privates['security.authentication.manager'] ?? $this->getSecurity_Authentication_ManagerService());
}, 'security.encoder_factory' => function () {
    return ($this->privates['security.encoder_factory.generic'] ?? $this->privates['security.encoder_factory.generic'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array()));
}, 'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface' => function () {
    return ($this->privates['security.encoder_factory.generic'] ?? $this->privates['security.encoder_factory.generic'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array()));
}, 'Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface' => function () {
    return ($this->services['security.password_encoder'] ?? $this->load('getSecurity_PasswordEncoderService.php'));
}, 'Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationUtils' => function () {
    return ($this->services['security.authentication_utils'] ?? $this->load('getSecurity_AuthenticationUtilsService.php'));
}, 'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface' => function () {
    return ($this->privates['security.access.decision_manager'] ?? $this->getSecurity_Access_DecisionManagerService());
}, 'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchyInterface' => function () {
    return ($this->privates['security.role_hierarchy'] ?? $this->privates['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy(array()));
}, 'Symfony\\Component\\Security\\Http\\Firewall' => function () {
    return ($this->privates['security.firewall'] ?? $this->getSecurity_FirewallService());
}, 'Symfony\\Component\\Security\\Http\\HttpUtils' => function () {
    return ($this->privates['security.http_utils'] ?? $this->load('getSecurity_HttpUtilsService.php'));
}, 'Symfony\\Component\\Security\\Core\\User\\UserProviderInterface' => function () {
    return ($this->privates['security.user.provider.concrete.in_memory'] ?? $this->privates['security.user.provider.concrete.in_memory'] = new \Symfony\Component\Security\Core\User\InMemoryUserProvider(array()));
}, 'Doctrine\\DBAL\\Driver\\Connection' => function () {
    return ($this->services['doctrine.dbal.default_connection'] ?? $this->load('getDoctrine_Dbal_DefaultConnectionService.php'));
}, 'Doctrine\\DBAL\\Connection' => function () {
    return ($this->services['doctrine.dbal.default_connection'] ?? $this->load('getDoctrine_Dbal_DefaultConnectionService.php'));
}, 'Doctrine\\Common\\Persistence\\ManagerRegistry' => function () {
    return ($this->services['doctrine'] ?? $this->getDoctrineService());
}, 'Symfony\\Bridge\\Doctrine\\RegistryInterface' => function () {
    return ($this->services['doctrine'] ?? $this->getDoctrineService());
}, 'doctrine.dbal.event_manager' => function () {
    return ($this->privates['doctrine.dbal.default_connection.event_manager'] ?? $this->load('getDoctrine_Dbal_DefaultConnection_EventManagerService.php'));
}, 'Doctrine\\Common\\Persistence\\ObjectManager' => function () {
    return ($this->services['doctrine.orm.default_entity_manager'] ?? $this->load('getDoctrine_Orm_DefaultEntityManagerService.php'));
}, 'Doctrine\\ORM\\EntityManagerInterface' => function () {
    return ($this->services['doctrine.orm.default_entity_manager'] ?? $this->load('getDoctrine_Orm_DefaultEntityManagerService.php'));
}, 'doctrine.orm.metadata.annotation_reader' => function () {
    return ($this->privates['annotations.cached_reader'] ?? $this->getAnnotations_CachedReaderService());
}, 'doctrine.orm.default_entity_manager.event_manager' => function () {
    return ($this->privates['doctrine.dbal.default_connection.event_manager'] ?? $this->load('getDoctrine_Dbal_DefaultConnection_EventManagerService.php'));
}, 'api_platform.path_segment_name_generator' => function () {
    return ($this->privates['api_platform.path_segment_name_generator.underscore'] ?? $this->privates['api_platform.path_segment_name_generator.underscore'] = new \ApiPlatform\Core\Operation\UnderscorePathSegmentNameGenerator());
}, 'api_platform.serializer' => function () {
    return ($this->services['serializer'] ?? $this->getSerializerService());
}, 'api_platform.property_accessor' => function () {
    return ($this->privates['property_accessor'] ?? $this->getPropertyAccessorService());
}, 'api_platform.property_info' => function () {
    return ($this->privates['property_info'] ?? $this->getPropertyInfoService());
}, 'ApiPlatform\\Core\\Api\\UrlGeneratorInterface' => function () {
    return ($this->privates['api_platform.router'] ?? $this->getApiPlatform_RouterService());
}, 'ApiPlatform\\Core\\Api\\IriConverterInterface' => function () {
    return ($this->privates['api_platform.iri_converter'] ?? $this->getApiPlatform_IriConverterService());
}, 'ApiPlatform\\Core\\Serializer\\SerializerContextBuilderInterface' => function () {
    return ($this->privates['api_platform.serializer.context_builder.filter'] ?? $this->getApiPlatform_Serializer_ContextBuilder_FilterService());
}, 'api_platform.operation_path_resolver' => function () {
    return ($this->privates['api_platform.operation_path_resolver.router'] ?? $this->getApiPlatform_OperationPathResolver_RouterService());
}, 'ApiPlatform\\Core\\DataPersister\\DataPersisterInterface' => function () {
    return ($this->privates['api_platform.data_persister'] ?? $this->load('getApiPlatform_DataPersisterService.php'));
}, 'ApiPlatform\\Core\\DataProvider\\ItemDataProviderInterface' => function () {
    return ($this->privates['api_platform.item_data_provider'] ?? $this->getApiPlatform_ItemDataProviderService());
}, 'ApiPlatform\\Core\\DataProvider\\CollectionDataProviderInterface' => function () {
    return ($this->privates['api_platform.collection_data_provider'] ?? $this->getApiPlatform_CollectionDataProviderService());
}, 'ApiPlatform\\Core\\DataProvider\\SubresourceDataProviderInterface' => function () {
    return ($this->privates['api_platform.subresource_data_provider'] ?? $this->getApiPlatform_SubresourceDataProviderService());
}, 'ApiPlatform\\Core\\Validator\\ValidatorInterface' => function () {
    return ($this->privates['api_platform.validator'] ?? $this->load('getApiPlatform_ValidatorService.php'));
}, 'ApiPlatform\\Core\\Security\\ResourceAccessCheckerInterface' => function () {
    return ($this->privates['api_platform.security.resource_access_checker'] ?? $this->getApiPlatform_Security_ResourceAccessCheckerService());
}, 'ApiPlatform\\Core\\Metadata\\Resource\\Factory\\ResourceNameCollectionFactoryInterface' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_CachedService());
}, 'ApiPlatform\\Core\\Metadata\\Resource\\Factory\\ResourceMetadataFactoryInterface' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService());
}, 'api_platform.metadata.property.name_collection_factory' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService());
}, 'ApiPlatform\\Core\\Metadata\\Property\\Factory\\PropertyNameCollectionFactoryInterface' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService());
}, 'ApiPlatform\\Core\\Metadata\\Property\\Factory\\PropertyMetadataFactoryInterface' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_CachedService());
}, 'api_platform.metadata.resource.name_collection_factory' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_CachedService());
}, 'api_platform.metadata.resource.metadata_factory' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService());
}, 'api_platform.metadata.property.metadata_factory' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.cached'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_CachedService());
}, 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\EagerLoadingExtension' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.eager_loading'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_EagerLoadingService.php'));
}, 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\FilterExtension' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.filter'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_FilterService.php'));
}, 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\FilterEagerLoadingExtension' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.filter_eager_loading'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_FilterEagerLoadingService.php'));
}, 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\PaginationExtension' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.pagination'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_PaginationService.php'));
}, 'ApiPlatform\\Core\\Bridge\\Doctrine\\Orm\\Extension\\OrderExtension' => function () {
    return ($this->privates['api_platform.doctrine.orm.query_extension.order'] ?? $this->load('getApiPlatform_Doctrine_Orm_QueryExtension_OrderService.php'));
}, 'sensio_framework_extra.converter.doctrine.orm.expression_language' => function () {
    return ($this->privates['sensio_framework_extra.converter.doctrine.orm.expression_language.default'] ?? $this->privates['sensio_framework_extra.converter.doctrine.orm.expression_language.default'] = new \Symfony\Component\ExpressionLanguage\ExpressionLanguage());
}, 'sensio_framework_extra.security.expression_language' => function () {
    return ($this->privates['sensio_framework_extra.security.expression_language.default'] ?? $this->privates['sensio_framework_extra.security.expression_language.default'] = new \Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage());
}, 'logger' => function () {
    return ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService());
}, 'Psr\\Log\\LoggerInterface' => function () {
    return ($this->privates['monolog.logger'] ?? $this->getMonolog_LoggerService());
}, 'argument_resolver.controller_locator' => function () {
    return ($this->privates['.service_locator.3IbgjXl'] ?? $this->load('get_ServiceLocator_3IbgjXlService.php'));
}, 'twig.loader.filesystem' => function () {
    return ($this->privates['twig.loader.native_filesystem'] ?? $this->getTwig_Loader_NativeFilesystemService());
}, 'twig.loader' => function () {
    return ($this->privates['twig.loader.native_filesystem'] ?? $this->getTwig_Loader_NativeFilesystemService());
}, 'api_platform.metadata.property.metadata_factory.property_info.inner' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.xml'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_XmlService());
}, 'api_platform.metadata.property.metadata_factory.inherited.inner' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.property_info'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_PropertyInfoService());
}, 'api_platform.metadata.resource.metadata_factory.annotation.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.xml'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_XmlService());
}, 'api_platform.metadata.property.metadata_factory.annotation.inner' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.inherited'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_InheritedService());
}, 'api_platform.metadata.resource.metadata_factory.yaml.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.annotation'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_AnnotationService());
}, 'api_platform.metadata.property.metadata_factory.yaml.inner' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.annotation'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_AnnotationService());
}, 'api_platform.doctrine.orm.metadata.property.metadata_factory.inner' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.yaml'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_YamlService());
}, 'api_platform.metadata.property.metadata_factory.serializer.inner' => function () {
    return ($this->privates['api_platform.doctrine.orm.metadata.property.metadata_factory'] ?? $this->getApiPlatform_Doctrine_Orm_Metadata_Property_MetadataFactoryService());
}, 'api_platform.metadata.subresource.metadata_factory.annotation.inner' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.serializer'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_SerializerService());
}, 'api_platform.metadata.resource.metadata_factory.php_doc.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.yaml'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_YamlService());
}, 'api_platform.metadata.property.metadata_factory.validator.inner' => function () {
    return ($this->privates['api_platform.metadata.subresource.metadata_factory.annotation'] ?? $this->getApiPlatform_Metadata_Subresource_MetadataFactory_AnnotationService());
}, 'api_platform.metadata.resource.metadata_factory.short_name.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.php_doc'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_PhpDocService());
}, 'api_platform.metadata.resource.filter_metadata_factory.annotation.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.short_name'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_ShortNameService());
}, 'api_platform.metadata.resource.metadata_factory.operation.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.filter_metadata_factory.annotation'] ?? $this->getApiPlatform_Metadata_Resource_FilterMetadataFactory_AnnotationService());
}, 'api_platform.metadata.property.name_collection_factory.inherited.inner' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.property_info'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_PropertyInfoService());
}, 'serializer.mapping.class_metadata_factory' => function () {
    return ($this->privates['serializer.mapping.cache_class_metadata_factory'] ?? $this->getSerializer_Mapping_CacheClassMetadataFactoryService());
}, 'api_platform.serializer.context_builder' => function () {
    return ($this->privates['api_platform.serializer.context_builder.filter'] ?? $this->getApiPlatform_Serializer_ContextBuilder_FilterService());
}, 'api_platform.identifiers_extractor' => function () {
    return ($this->privates['api_platform.identifiers_extractor.cached'] ?? $this->getApiPlatform_IdentifiersExtractor_CachedService());
}, 'api_platform.metadata.property.name_collection_factory.xml.inner' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.inherited'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_InheritedService());
}, 'api_platform.metadata.resource.name_collection_factory.annotation.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.xml'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_XmlService());
}, 'api_platform.metadata.resource.name_collection_factory.yaml.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.annotation'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_AnnotationService());
}, 'api_platform.metadata.property.name_collection_factory.yaml.inner' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.xml'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_XmlService());
}, 'api_platform.swagger.normalizer.documentation' => function () {
    return ($this->privates['api_platform.swagger.normalizer.api_gateway'] ?? $this->getApiPlatform_Swagger_Normalizer_ApiGatewayService());
}, 'api_platform.hydra.normalizer.collection' => function () {
    return ($this->privates['api_platform.hydra.normalizer.collection_filters'] ?? $this->getApiPlatform_Hydra_Normalizer_CollectionFiltersService());
}, 'api_platform.hydra.normalizer.collection_filters.inner' => function () {
    return ($this->privates['api_platform.hydra.normalizer.partial_collection_view'] ?? $this->getApiPlatform_Hydra_Normalizer_PartialCollectionViewService());
}, 'api_platform.route_name_resolver' => function () {
    return ($this->privates['api_platform.route_name_resolver.cached'] ?? $this->getApiPlatform_RouteNameResolver_CachedService());
}, 'api_platform.subresource_operation_factory' => function () {
    return ($this->privates['api_platform.subresource_operation_factory.cached'] ?? $this->getApiPlatform_SubresourceOperationFactory_CachedService());
}, 'api_platform.metadata.resource.name_collection_factory.cached.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.name_collection_factory.yaml'] ?? $this->getApiPlatform_Metadata_Resource_NameCollectionFactory_YamlService());
}, 'api_platform.metadata.resource.metadata_factory.cached.inner' => function () {
    return ($this->privates['api_platform.metadata.resource.metadata_factory.operation'] ?? $this->getApiPlatform_Metadata_Resource_MetadataFactory_OperationService());
}, 'api_platform.metadata.property.name_collection_factory.cached.inner' => function () {
    return ($this->privates['api_platform.metadata.property.name_collection_factory.yaml'] ?? $this->getApiPlatform_Metadata_Property_NameCollectionFactory_YamlService());
}, 'api_platform.metadata.property.metadata_factory.cached.inner' => function () {
    return ($this->privates['api_platform.metadata.property.metadata_factory.validator'] ?? $this->getApiPlatform_Metadata_Property_MetadataFactory_ValidatorService());
}));
